(function (React) {
  'use strict';

  function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

  var React__default = /*#__PURE__*/_interopDefault(React);

  const UploadImage = ({
    onChange,
    property,
    record,
    customErrorMessage
  }) => {
    const [preview, setPreview] = React.useState(record?.params?.[property.name] || '');
    const handleChange = event => {
      const file = event.target.files?.[0];
      if (file) {
        setPreview(URL.createObjectURL(file)); // Update preview
        onChange(property.name, file);
      }
    };
    const inputRef = React__default.default.useRef(null);
    const handleFileInputClick = () => {
      inputRef.current.click();
    };
    React__default.default.useEffect(() => {
      console.log({
        property,
        record
      });
      console.log(record.errors?.image?.message);
    });
    return /*#__PURE__*/React__default.default.createElement("div", null, /*#__PURE__*/React__default.default.createElement("label", {
      htmlFor: ""
    }, "* ", property.name), /*#__PURE__*/React__default.default.createElement("section", {
      style: {
        backgroundColor: "white",
        padding: "2rem 4rem",
        borderRadius: "0.375rem",
        position: "relative"
      }
    }, /*#__PURE__*/React__default.default.createElement("div", {
      onClick: handleFileInputClick,
      style: {
        backgroundColor: "#FCFAF2",
        borderRadius: "0.5rem",
        borderWidth: "2px",
        borderStyle: "dashed",
        borderColor: "rgba(51, 51, 65, 0.75)",
        padding: "30.5px"
      }
    }, /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        display: "flex",
        justifyContent: "center",
        cursor: "pointer"
      }
    }, preview ? /*#__PURE__*/React__default.default.createElement("img", {
      src: preview,
      alt: "Preview",
      style: {
        marginTop: '10px',
        maxWidth: '100px'
      },
      onClick: handleFileInputClick
    }) : /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center'
      }
    }, /*#__PURE__*/React__default.default.createElement("p", null, "Click to upload"), /*#__PURE__*/React__default.default.createElement("p", null, "Max no of Image is 1"), /*#__PURE__*/React__default.default.createElement("p", null, ".Png, .Jpg images only*"))), /*#__PURE__*/React__default.default.createElement("input", {
      type: "file",
      id: "image",
      ref: inputRef,
      style: {
        display: "none"
      },
      name: "attachment",
      accept: "image/*",
      onChange: handleChange
    }))), /*#__PURE__*/React__default.default.createElement("h1", {
      style: {
        color: 'red',
        fontSize: '14px',
        marginBottom: '10px'
      }
    }, record.errors?.image?.message));
  };

  const UploadVideo = ({
    onChange,
    property,
    record,
    customErrorMessage
  }) => {
    const [preview, setPreview] = React.useState(record?.params?.[property.name] || '');
    const handleChangeFile = event => {
      let file = event.target.files?.[0];
      if (file) {
        setPreview(() => URL.createObjectURL(file)); // Update preview
        onChange(property.name, file);
      }
    };
    const handleChangeLink = event => {
      let altUrl = event.target.value;
      if (altUrl) {
        setPreview(() => altUrl); // Update preview
        onChange(property.name, altUrl);
      }
    };
    console.log({
      preview
    });
    const inputRef = React__default.default.useRef(null);
    const handleFileInputClick = () => {
      inputRef.current.click();
    };
    React__default.default.useEffect(() => {
      console.log({
        property,
        record
      });
      console.log(record.errors?.lessonvideo?.message);
    });
    React__default.default.useEffect(() => {
      return () => {
        if (preview?.startsWith("blob:")) {
          URL.revokeObjectURL(preview);
        }
      };
    }, [preview]);
    return /*#__PURE__*/React__default.default.createElement("div", null, /*#__PURE__*/React__default.default.createElement("label", {
      htmlFor: ""
    }, "* ", property.name), /*#__PURE__*/React__default.default.createElement("section", {
      style: {
        backgroundColor: "white",
        padding: "2rem 4rem",
        borderRadius: "0.375rem",
        position: "relative"
      }
    }, /*#__PURE__*/React__default.default.createElement("div", {
      onClick: handleFileInputClick,
      style: {
        backgroundColor: "#FCFAF2",
        borderRadius: "0.5rem",
        borderWidth: "2px",
        borderStyle: "dashed",
        borderColor: "rgba(51, 51, 65, 0.75)",
        padding: "30.5px"
      }
    }, /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        display: "flex",
        justifyContent: "center",
        cursor: "pointer"
      }
    }, preview ? /*#__PURE__*/React__default.default.createElement("video", {
      key: preview,
      onClick: handleFileInputClick,
      style: {
        marginTop: '10px',
        maxWidth: '400px'
      },
      controls: true,
      width: "500"
    }, /*#__PURE__*/React__default.default.createElement("source", {
      src: preview,
      type: "video/mp4"
    }), "Your browser does not support the video tag.") : /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center'
      }
    }, /*#__PURE__*/React__default.default.createElement("p", null, "Click to upload"), /*#__PURE__*/React__default.default.createElement("p", null, "Max no of video is 1"), /*#__PURE__*/React__default.default.createElement("p", null, ".Mp4 Videos only*"))), /*#__PURE__*/React__default.default.createElement("input", {
      type: "file",
      id: "videoUrl",
      ref: inputRef,
      style: {
        display: "none"
      },
      name: "attachment",
      accept: "video/*",
      onChange: handleChangeFile
    })), /*#__PURE__*/React__default.default.createElement("p", {
      style: {
        marginTop: '10px'
      }
    }, "or"), /*#__PURE__*/React__default.default.createElement("label", {
      htmlFor: "videoUrl",
      style: {
        margin: '10px 0px',
        display: 'flex',
        flexDirection: "column",
        gap: '10px'
      }
    }, "Video Url", /*#__PURE__*/React__default.default.createElement("input", {
      type: "text",
      id: "videoUrl",
      name: "videoUrl",
      accept: "video/*",
      onChange: handleChangeLink,
      style: {
        padding: '5px 10px',
        borderRadius: '5px',
        border: '1px solid rgb(187, 195, 203)',
        color: 'rgb(12, 30, 41)',
        fontSize: '14px'
      }
    }))), /*#__PURE__*/React__default.default.createElement("h1", {
      style: {
        color: 'red',
        fontSize: '14px',
        marginBottom: '10px'
      }
    }, record.errors?.lessonVideo?.message));
  };

  AdminJS.UserComponents = {};
  AdminJS.UserComponents.UploadImage = UploadImage;
  AdminJS.UserComponents.UploadVideo = UploadVideo;

})(React);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyIuLi9zcmMvY29tcG9uZW50cy9VcGxvYWRJbWFnZS50c3giLCIuLi9zcmMvY29tcG9uZW50cy9VcGxvYWRWaWRlby50c3giLCJlbnRyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IEJhc2VQcm9wZXJ0eVByb3BzIH0gZnJvbSAnYWRtaW5qcyc7XHJcblxyXG5cclxuaW50ZXJmYWNlIEN1c3RvbU5ld0NvbXBvbmVudFByb3BzIGV4dGVuZHMgQmFzZVByb3BlcnR5UHJvcHMge1xyXG4gIGN1c3RvbUVycm9yTWVzc2FnZT86IHN0cmluZztcclxufVxyXG5jb25zdCBVcGxvYWRJbWFnZTogUmVhY3QuRkM8Q3VzdG9tTmV3Q29tcG9uZW50UHJvcHM+ID0gKHsgb25DaGFuZ2UsIHByb3BlcnR5LCByZWNvcmQsY3VzdG9tRXJyb3JNZXNzYWdlIH0pID0+IHtcclxuICBjb25zdCBbcHJldmlldywgc2V0UHJldmlld10gPSB1c2VTdGF0ZTxzdHJpbmcgfCB1bmRlZmluZWQ+KHJlY29yZD8ucGFyYW1zPy5bcHJvcGVydHkubmFtZV0gfHwgJycpO1xyXG5cclxuICBjb25zdCBoYW5kbGVDaGFuZ2UgPSAoZXZlbnQ6IFJlYWN0LkNoYW5nZUV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XHJcbiAgICBjb25zdCBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzPy5bMF07XHJcbiAgICBpZiAoZmlsZSkge1xyXG4gICAgICBzZXRQcmV2aWV3KFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSkpOyAvLyBVcGRhdGUgcHJldmlld1xyXG4gICAgICBvbkNoYW5nZShwcm9wZXJ0eS5uYW1lLCBmaWxlKTtcclxuICAgIH1cclxuICB9O1xyXG4gIGNvbnN0IGlucHV0UmVmID0gUmVhY3QudXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwhKVxyXG5cclxuICBjb25zdCBoYW5kbGVGaWxlSW5wdXRDbGljayA9ICgpPT57XHJcbiAgICBpbnB1dFJlZi5jdXJyZW50LmNsaWNrKClcclxuICB9XHJcbiAgUmVhY3QudXNlRWZmZWN0KCgpPT57XHJcbiAgICBjb25zb2xlLmxvZyh7cHJvcGVydHkscmVjb3JkfSlcclxuICAgIGNvbnNvbGUubG9nKHJlY29yZC5lcnJvcnM/LmltYWdlPy5tZXNzYWdlKVxyXG4gIH0pXHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8bGFiZWwgaHRtbEZvcj1cIlwiPlxyXG4gICAgICAgICoge3Byb3BlcnR5Lm5hbWV9XHJcbiAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgPHNlY3Rpb24gc3R5bGU9e3tiYWNrZ3JvdW5kQ29sb3I6IFwid2hpdGVcIixwYWRkaW5nOiBcIjJyZW0gNHJlbVwiLGJvcmRlclJhZGl1czogXCIwLjM3NXJlbVwiLHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsfX0+XHJcbiAgICAgICAgICAgIDxkaXYgb25DbGljaz17aGFuZGxlRmlsZUlucHV0Q2xpY2t9IHN0eWxlPXt7YmFja2dyb3VuZENvbG9yOiBcIiNGQ0ZBRjJcIiwgYm9yZGVyUmFkaXVzOiBcIjAuNXJlbVwiLGJvcmRlcldpZHRoOiBcIjJweFwiLGJvcmRlclN0eWxlOiBcImRhc2hlZFwiLGJvcmRlckNvbG9yOiBcInJnYmEoNTEsIDUxLCA2NSwgMC43NSlcIixwYWRkaW5nOiBcIjMwLjVweFwifX0+XHJcbiAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e2Rpc3BsYXk6IFwiZmxleFwiLGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLGN1cnNvcjogXCJwb2ludGVyXCIsfX0+XHJcbiAgICAgICAgICAgICAge3ByZXZpZXcgPyA8aW1nIHNyYz17cHJldmlld30gYWx0PVwiUHJldmlld1wiIHN0eWxlPXt7IG1hcmdpblRvcDogJzEwcHgnLCBtYXhXaWR0aDogJzEwMHB4JyB9fSBvbkNsaWNrPXtoYW5kbGVGaWxlSW5wdXRDbGlja30gIC8+IDogKDxkaXZcclxuICAgICAgICAgICAgICBzdHlsZT17e2Rpc3BsYXkgOiAnZmxleCcsIGZsZXhEaXJlY3Rpb24gOiAnY29sdW1uJywgYWxpZ25JdGVtcyA6ICdjZW50ZXInfX0+XHJcbiAgICAgICAgICAgICAgPHA+Q2xpY2sgdG8gdXBsb2FkPC9wPlxyXG4gICAgICAgICAgICAgIDxwPk1heCBubyBvZiBJbWFnZSBpcyAxPC9wPlxyXG4gICAgICAgICAgICAgIDxwPi5QbmcsIC5KcGcgaW1hZ2VzIG9ubHkqPC9wPlxyXG4gICAgICAgICAgICAgIDwvZGl2PikgfVxyXG4gICAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiZmlsZVwiIGlkPVwiaW1hZ2VcIiByZWY9e2lucHV0UmVmfSBzdHlsZT17eyBkaXNwbGF5OiBcIm5vbmVcIiB9fSBuYW1lPVwiYXR0YWNobWVudFwiIGFjY2VwdD1cImltYWdlLypcIiBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfS8+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvc2VjdGlvbj5cclxuICAgICAgICA8aDEgc3R5bGU9e3tjb2xvciA6ICdyZWQnLCBmb250U2l6ZSA6ICcxNHB4JywgbWFyZ2luQm90dG9tIDogJzEwcHgnfX0+e3JlY29yZC5lcnJvcnM/LmltYWdlPy5tZXNzYWdlfTwvaDE+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXBsb2FkSW1hZ2U7XHJcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgQmFzZVByb3BlcnR5UHJvcHMgfSBmcm9tICdhZG1pbmpzJztcclxuXHJcblxyXG5pbnRlcmZhY2UgQ3VzdG9tTmV3Q29tcG9uZW50UHJvcHMgZXh0ZW5kcyBCYXNlUHJvcGVydHlQcm9wcyB7XHJcbiAgY3VzdG9tRXJyb3JNZXNzYWdlPzogc3RyaW5nO1xyXG59XHJcbmNvbnN0IFVwbG9hZFZpZGVvOiBSZWFjdC5GQzxDdXN0b21OZXdDb21wb25lbnRQcm9wcz4gPSAoeyBvbkNoYW5nZSwgcHJvcGVydHksIHJlY29yZCxjdXN0b21FcnJvck1lc3NhZ2UgfSkgPT4ge1xyXG4gIGNvbnN0IFtwcmV2aWV3LCBzZXRQcmV2aWV3XSA9IHVzZVN0YXRlPHN0cmluZyB8IHVuZGVmaW5lZD4ocmVjb3JkPy5wYXJhbXM/Lltwcm9wZXJ0eS5uYW1lXSB8fCAnJyk7XHJcblxyXG4gIGNvbnN0IGhhbmRsZUNoYW5nZUZpbGUgPSAoZXZlbnQ6IFJlYWN0LkNoYW5nZUV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XHJcbiAgICBsZXQgZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlcz8uWzBdO1xyXG4gICAgaWYgKGZpbGUpIHtcclxuICAgICAgc2V0UHJldmlldygoKT0+KFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSkpKTsgLy8gVXBkYXRlIHByZXZpZXdcclxuICAgICAgb25DaGFuZ2UocHJvcGVydHkubmFtZSwgZmlsZSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgaGFuZGxlQ2hhbmdlTGluayA9IChldmVudDogUmVhY3QuQ2hhbmdlRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IHtcclxuICAgIGxldCBhbHRVcmwgPSBldmVudC50YXJnZXQudmFsdWVcclxuICAgIGlmKGFsdFVybCl7XHJcbiAgICAgICAgc2V0UHJldmlldygoKT0+YWx0VXJsKTsgLy8gVXBkYXRlIHByZXZpZXdcclxuICAgICAgICBvbkNoYW5nZShwcm9wZXJ0eS5uYW1lLCBhbHRVcmwpO1xyXG4gICAgfVxyXG4gIH07XHJcbiAgY29uc29sZS5sb2coe3ByZXZpZXd9KVxyXG4gIGNvbnN0IGlucHV0UmVmID0gUmVhY3QudXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwhKVxyXG5cclxuICBjb25zdCBoYW5kbGVGaWxlSW5wdXRDbGljayA9ICgpPT57XHJcbiAgICBpbnB1dFJlZi5jdXJyZW50LmNsaWNrKClcclxuICB9XHJcbiAgUmVhY3QudXNlRWZmZWN0KCgpPT57XHJcbiAgICBjb25zb2xlLmxvZyh7cHJvcGVydHkscmVjb3JkfSlcclxuICAgIGNvbnNvbGUubG9nKHJlY29yZC5lcnJvcnM/Lmxlc3NvbnZpZGVvPy5tZXNzYWdlKVxyXG4gIH0pXHJcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgIGlmIChwcmV2aWV3Py5zdGFydHNXaXRoKFwiYmxvYjpcIikpIHtcclxuICAgICAgICBVUkwucmV2b2tlT2JqZWN0VVJMKHByZXZpZXcpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gIH0sIFtwcmV2aWV3XSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8bGFiZWwgaHRtbEZvcj1cIlwiPlxyXG4gICAgICAgICoge3Byb3BlcnR5Lm5hbWV9XHJcbiAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgPHNlY3Rpb24gc3R5bGU9e3tiYWNrZ3JvdW5kQ29sb3I6IFwid2hpdGVcIixwYWRkaW5nOiBcIjJyZW0gNHJlbVwiLGJvcmRlclJhZGl1czogXCIwLjM3NXJlbVwiLHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsfX0+XHJcbiAgICAgICAgICAgIDxkaXYgb25DbGljaz17aGFuZGxlRmlsZUlucHV0Q2xpY2t9IHN0eWxlPXt7YmFja2dyb3VuZENvbG9yOiBcIiNGQ0ZBRjJcIiwgYm9yZGVyUmFkaXVzOiBcIjAuNXJlbVwiLGJvcmRlcldpZHRoOiBcIjJweFwiLGJvcmRlclN0eWxlOiBcImRhc2hlZFwiLGJvcmRlckNvbG9yOiBcInJnYmEoNTEsIDUxLCA2NSwgMC43NSlcIixwYWRkaW5nOiBcIjMwLjVweFwifX0+XHJcbiAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e2Rpc3BsYXk6IFwiZmxleFwiLGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLGN1cnNvcjogXCJwb2ludGVyXCIsfX0+XHJcbiAgICAgICAgICAgICAge3ByZXZpZXcgPyA8dmlkZW8ga2V5PXtwcmV2aWV3fSBvbkNsaWNrPXtoYW5kbGVGaWxlSW5wdXRDbGlja30gc3R5bGU9e3sgbWFyZ2luVG9wOiAnMTBweCcsIG1heFdpZHRoOiAnNDAwcHgnIH19IGNvbnRyb2xzIHdpZHRoPVwiNTAwXCI+XHJcbiAgICAgICAgICAgICAgICA8c291cmNlIHNyYz17cHJldmlld30gdHlwZT1cInZpZGVvL21wNFwiIC8+XHJcbiAgICAgICAgICAgICAgICBZb3VyIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCB0aGUgdmlkZW8gdGFnLlxyXG4gICAgICAgICAgICAgICAgPC92aWRlbz4gOiAoPGRpdlxyXG4gICAgICAgICAgICAgIHN0eWxlPXt7ZGlzcGxheSA6ICdmbGV4JywgZmxleERpcmVjdGlvbiA6ICdjb2x1bW4nLCBhbGlnbkl0ZW1zIDogJ2NlbnRlcid9fT5cclxuICAgICAgICAgICAgICA8cD5DbGljayB0byB1cGxvYWQ8L3A+XHJcbiAgICAgICAgICAgICAgPHA+TWF4IG5vIG9mIHZpZGVvIGlzIDE8L3A+XHJcbiAgICAgICAgICAgICAgPHA+Lk1wNCBWaWRlb3Mgb25seSo8L3A+XHJcbiAgICAgICAgICAgICAgPC9kaXY+KX1cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImZpbGVcIiBpZD1cInZpZGVvVXJsXCIgcmVmPXtpbnB1dFJlZn0gc3R5bGU9e3sgZGlzcGxheTogXCJub25lXCIgfX0gbmFtZT1cImF0dGFjaG1lbnRcIiBhY2NlcHQ9XCJ2aWRlby8qXCIgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZUZpbGV9Lz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxwIHN0eWxlPXt7bWFyZ2luVG9wIDogJzEwcHgnfX0+b3I8L3A+XHJcbiAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwidmlkZW9VcmxcIiBzdHlsZT17e21hcmdpbiA6ICcxMHB4IDBweCcsIGRpc3BsYXkgOiAnZmxleCcsIGZsZXhEaXJlY3Rpb24gOiBcImNvbHVtblwiLCBnYXAgOiAnMTBweCd9fT5cclxuICAgICAgICAgICAgICAgIFZpZGVvIFVybFxyXG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgaWQ9XCJ2aWRlb1VybFwiICBuYW1lPVwidmlkZW9VcmxcIiBhY2NlcHQ9XCJ2aWRlby8qXCIgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZUxpbmt9IHN0eWxlPXt7cGFkZGluZyA6ICc1cHggMTBweCcsYm9yZGVyUmFkaXVzIDogJzVweCcsIGJvcmRlcjogJzFweCBzb2xpZCByZ2IoMTg3LCAxOTUsIDIwMyknLGNvbG9yOiAncmdiKDEyLCAzMCwgNDEpJywgZm9udFNpemUgOiAnMTRweCd9fS8+XHJcbiAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgPC9zZWN0aW9uPlxyXG4gICAgICAgIFxyXG4gICAgICAgIDxoMSBzdHlsZT17e2NvbG9yIDogJ3JlZCcsIGZvbnRTaXplIDogJzE0cHgnLCBtYXJnaW5Cb3R0b20gOiAnMTBweCd9fT57cmVjb3JkLmVycm9ycz8ubGVzc29uVmlkZW8/Lm1lc3NhZ2V9PC9oMT5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBVcGxvYWRWaWRlbztcclxuIiwiQWRtaW5KUy5Vc2VyQ29tcG9uZW50cyA9IHt9XG5pbXBvcnQgVXBsb2FkSW1hZ2UgZnJvbSAnLi4vc3JjL2NvbXBvbmVudHMvVXBsb2FkSW1hZ2UnXG5BZG1pbkpTLlVzZXJDb21wb25lbnRzLlVwbG9hZEltYWdlID0gVXBsb2FkSW1hZ2VcbmltcG9ydCBVcGxvYWRWaWRlbyBmcm9tICcuLi9zcmMvY29tcG9uZW50cy9VcGxvYWRWaWRlbydcbkFkbWluSlMuVXNlckNvbXBvbmVudHMuVXBsb2FkVmlkZW8gPSBVcGxvYWRWaWRlbyJdLCJuYW1lcyI6WyJVcGxvYWRJbWFnZSIsIm9uQ2hhbmdlIiwicHJvcGVydHkiLCJyZWNvcmQiLCJjdXN0b21FcnJvck1lc3NhZ2UiLCJwcmV2aWV3Iiwic2V0UHJldmlldyIsInVzZVN0YXRlIiwicGFyYW1zIiwibmFtZSIsImhhbmRsZUNoYW5nZSIsImV2ZW50IiwiZmlsZSIsInRhcmdldCIsImZpbGVzIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiaW5wdXRSZWYiLCJSZWFjdCIsInVzZVJlZiIsImhhbmRsZUZpbGVJbnB1dENsaWNrIiwiY3VycmVudCIsImNsaWNrIiwidXNlRWZmZWN0IiwiY29uc29sZSIsImxvZyIsImVycm9ycyIsImltYWdlIiwibWVzc2FnZSIsImNyZWF0ZUVsZW1lbnQiLCJodG1sRm9yIiwic3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJwYWRkaW5nIiwiYm9yZGVyUmFkaXVzIiwicG9zaXRpb24iLCJvbkNsaWNrIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJTdHlsZSIsImJvcmRlckNvbG9yIiwiZGlzcGxheSIsImp1c3RpZnlDb250ZW50IiwiY3Vyc29yIiwic3JjIiwiYWx0IiwibWFyZ2luVG9wIiwibWF4V2lkdGgiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsInR5cGUiLCJpZCIsInJlZiIsImFjY2VwdCIsImNvbG9yIiwiZm9udFNpemUiLCJtYXJnaW5Cb3R0b20iLCJVcGxvYWRWaWRlbyIsImhhbmRsZUNoYW5nZUZpbGUiLCJoYW5kbGVDaGFuZ2VMaW5rIiwiYWx0VXJsIiwidmFsdWUiLCJsZXNzb252aWRlbyIsInN0YXJ0c1dpdGgiLCJyZXZva2VPYmplY3RVUkwiLCJrZXkiLCJjb250cm9scyIsIndpZHRoIiwibWFyZ2luIiwiZ2FwIiwiYm9yZGVyIiwibGVzc29uVmlkZW8iLCJBZG1pbkpTIiwiVXNlckNvbXBvbmVudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7RUFPQSxNQUFNQSxXQUE4QyxHQUFHQSxDQUFDO0lBQUVDLFFBQVE7SUFBRUMsUUFBUTtJQUFFQyxNQUFNO0VBQUNDLEVBQUFBO0VBQW1CLENBQUMsS0FBSztFQUM1RyxFQUFBLE1BQU0sQ0FBQ0MsT0FBTyxF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
